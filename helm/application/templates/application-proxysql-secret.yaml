apiVersion: v1
kind: Secret
metadata:
  name: application-proxysql-secret
  namespace: application
  labels:
    app.kubernetes.io/name: application-proxysql-secret
type: Opaque
stringData:
  proxysql.cnf: |
    datadir = "/var/lib/proxysql"

    admin_variables = {
      admin_credentials = "{{ .Values.mysql.auth.user | default "root" }}:{{ .Values.proxysql.admin.password | default .Values.mysql.auth.rootPassword }}"
      mysql_ifaces = "0.0.0.0:6032"
    }

    mysql_variables = {
        interfaces = "0.0.0.0:6033"
        monitor_username = "{{ .Values.proxysql.monitor.user | default "root" }}"
        monitor_password = "{{ .Values.proxysql.monitor.password | default .Values.mysql.auth.rootPassword }}"
    }

    mysql_servers = (
    {{- with .Values.proxysql.servers }}
    {{- range $index, $server := . }}
      {
        address = {{ $server.host | quote }}
        port = {{ $server.port | default 3306 }}
        hostgroup = {{ $server.hostGroup | default 0 }}
        max_connections = {{ $server.maxConnections | default 200 }}
        {{- if $server.extraConfig }}
        {{- $server.extraConfig | nindent 8 -}}
        {{- end }}
      }
    {{- if and (gt (len $.Values.proxysql.servers) 0) (not (eq (sub (len $.Values.proxysql.servers) 1) $index)) -}}
      ,
    {{- end }}
    {{- end }}
    {{- end }}
    )

    mysql_users = (
    {{- with .Values.proxysql.users }}
    {{- range $index, $user := . }}
      {
        username = {{ $user.name | quote}}
        password = {{ $user.password | quote }}
        default_hostgroup = {{ $user.defaultHostGroup | default 0 }}
        max_connections = {{ $user.maxConnections | default 1000 }}
        default_schema = {{ $user.defaultSchema | default "information_schema" | quote }}
        active = {{ $user.active | default 1 }}
      }
    {{- if and (gt (len $.Values.proxysql.users) 0) (not (eq (sub (len $.Values.proxysql.users) 1) $index)) -}}
      ,
    {{- end }}
    {{- end }}
    {{- end }}
    )

    mysql_query_rules = (
    {{- with .Values.proxysql.queryRules }}
    {{- range $index, $rule := . }}
      {
        rule_id = {{ $rule.id }}
        match_pattern = {{ $rule.matchPattern | quote }}
        cache_ttl = {{ $rule.cacheTtl }}
        destination_hostgroup = {{ $rule.destinationHostGroup | default 0 }}
        active = {{ $rule.active | default 1 }}
        apply = {{ $rule.apply | default 1 }}
      }
    {{- if and (gt (len $.Values.proxysql.queryRules) 0) (not (eq (sub (len $.Values.proxysql.queryRules) 1) $index)) -}}
      ,
    {{- end }}
    {{- end }}
    {{- end }}
    )
